
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author HP
 */
public class UserMovieFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserMovieFrame
     */
    String catname = "";
    Dimension d;

    public UserMovieFrame(String catname) {
        initComponents();
        d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d.getSize());
        this.catname = catname;
        getCategoryDetails();
        getMovies(catname);
        jPanel1.setBounds(20, 10, d.width - 60, 200);
        jScrollPane1.setBounds(20, 230, d.width - 60, d.height - 350);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 10, 110, 20);

        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(24, 40, 150, 80);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(250, 20, 240, 96);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 9, 520, 130);

        mainPanel.setBackground(new java.awt.Color(153, 153, 255));
        mainPanel.setLayout(null);
        jScrollPane1.setViewportView(mainPanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 170, 520, 290);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void getCategoryDetails() {
        //send Unirest get request 
        try {
            HttpResponse<String> res = Unirest.get("http://localhost:9000/getCategoryDetails")
                    .queryString("catname", catname)
                    .asString();

            if (res.getStatus() == 200) {
                String ans = res.getBody();
                System.out.println("-----------------" + ans);
                if (ans.equals("fails")) {
                    System.out.println("fails");
                } else {
                    System.out.println("answer is-------------- " + ans);
                    StringTokenizer st = new StringTokenizer(ans, "~~");
                    String description = st.nextToken();
                    String photo = st.nextToken();
                    jLabel1.setText(catname);
                    jLabel2.setText(photo);
                    URL url = new URL("http://localhost:9000/getresource/" + photo);
                    BufferedImage img = ImageIO.read(url);
                    Image newimg = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
                    jLabel2.setIcon(new ImageIcon(newimg));
                    jTextArea1.setText(description);

                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public void getMovies(String cat) {
        //send Unirest get request on server and fetch all categories  from database
        try {
            HttpResponse<String> res = Unirest.get("http://localhost:9000/getAllMovies")
                    .queryString("cat", cat)
                    .asString();

            if (res.getStatus() == 200) {
                String ans = res.getBody();
                System.out.println("ans-----------------" + ans);
                StringTokenizer st = new StringTokenizer(ans, "#$#");
                int count = st.countTokens();
                UserMoviePanel obj[] = new UserMoviePanel[count];
                int i = 0;
                int x = 20, y = 20;

                mainPanel.setPreferredSize(new Dimension(count * 530, d.height - 330));

                while (st.hasMoreTokens()) {
                    obj[i] = new UserMoviePanel();

                    String movieDetails = st.nextToken();
                    System.out.println("categoryDetails   " + movieDetails);
                    StringTokenizer st2 = new StringTokenizer(movieDetails, "**");
                    String movieid = st2.nextToken();
                    String movieName = st2.nextToken();
                    String description = st2.nextToken();
                    String squarePhoto = st2.nextToken();
                    String wide_photo = st2.nextToken();
                    String sample_video = st2.nextToken();
                    String amount = st2.nextToken();
                    obj[i].jmoviename.setText(movieName);
                    obj[i].jdescription.setText(description);
                    obj[i].jdescription.setEditable(false);
                    obj[i].jamt.setText("Rs." + amount);

                    URL url = new URL("http://localhost:9000/getresource/" + squarePhoto);
                    BufferedImage img = ImageIO.read(url);
                    Image newimg = img.getScaledInstance(obj[i].jphoto.getWidth(), obj[i].jphoto.getHeight(), Image.SCALE_SMOOTH);
                    obj[i].jphoto.setIcon(new ImageIcon(newimg));

                    obj[i].addMouseListener(new MouseAdapter() {

                        public void mouseClicked(MouseEvent e) {
                            UserMovieDetailFrame obj = new UserMovieDetailFrame(movieName, catname);
                        }

                    });

                    obj[i].setBounds(x, y, 500, d.height - 380);
                    mainPanel.add(obj[i]);
                    x += 530;
                    i++;
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMovieFrame("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
